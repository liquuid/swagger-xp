/**
 * Vehicle Maintance Manager
 * This is a sample vehicle maintance manager server.
 *
 * OpenAPI spec version: 0.0.1
 * Contact: apiteam@vmmapi
 *
 * NOTE: This class is auto generated by the swagger code generator 2.2.3.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * FineApi.h
 *
 * 
 */

#ifndef FineApi_H_
#define FineApi_H_


#include "ApiClient.h"

#include "Fine.h"
#include <cpprest/details/basic_types.h>

namespace io {
namespace swagger {
namespace client {
namespace api {

using namespace io::swagger::client::model;

class  FineApi
{
public:
    FineApi( std::shared_ptr<ApiClient> apiClient );
    virtual ~FineApi();
    /// <summary>
    /// Add a fine to the vehicle
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="vehicleId">ID of vehicle that needs to be updated</param>/// <param name="amount">The total amount of fines</param>
    pplx::task<void> addFineToVehicleId(int64_t vehicleId, double amount);
    /// <summary>
    /// Deletes a fine
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="fineId">fine id to delete</param>/// <param name="apiKey"> (optional)</param>
    pplx::task<void> deleteFine(int64_t fineId, utility::string_t apiKey);
    /// <summary>
    /// Find fine by ID
    /// </summary>
    /// <remarks>
    /// Returns a single fine
    /// </remarks>
    /// <param name="fineId">ID of fine to return</param>
    pplx::task<std::shared_ptr<Fine>> getFineById(int64_t fineId);

protected:
    std::shared_ptr<ApiClient> m_ApiClient;
};

}
}
}
}

#endif /* FineApi_H_ */

