/*
 * Vehicle Maintance Manager
 * This is a sample vehicle maintance manager server.
 *
 * OpenAPI spec version: 0.0.1
 * Contact: apiteam@vmmapi
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import java.io.File;
import io.swagger.client.model.ModelApiResponse;
import io.swagger.client.model.Vehicle;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for VehicleApi
 */
@Ignore
public class VehicleApiTest {

    private final VehicleApi api = new VehicleApi();

    
    /**
     * Add a new vehicle
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addVehicleTest() throws ApiException {
        Vehicle body = null;
        api.addVehicle(body);

        // TODO: test validations
    }
    
    /**
     * Deletes a vehicle
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteVehicleTest() throws ApiException {
        Long vehicleId = null;
        String apiKey = null;
        api.deleteVehicle(vehicleId, apiKey);

        // TODO: test validations
    }
    
    /**
     * Find vehicle by ID
     *
     * Returns a single vehicle
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getVehicleByIdTest() throws ApiException {
        Long vehicleId = null;
        Vehicle response = api.getVehicleById(vehicleId);

        // TODO: test validations
    }
    
    /**
     * Update an existing vehicle
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateVehicleTest() throws ApiException {
        Vehicle body = null;
        api.updateVehicle(body);

        // TODO: test validations
    }
    
    /**
     * Updates a vehicle in the garage with form data
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateVehicleWithFormTest() throws ApiException {
        Long vehicleId = null;
        String name = null;
        String vehicletype = null;
        api.updateVehicleWithForm(vehicleId, name, vehicletype);

        // TODO: test validations
    }
    
    /**
     * uploads an image
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void uploadFileTest() throws ApiException {
        Long vehicleId = null;
        String additionalMetadata = null;
        File file = null;
        ModelApiResponse response = api.uploadFile(vehicleId, additionalMetadata, file);

        // TODO: test validations
    }
    
}
