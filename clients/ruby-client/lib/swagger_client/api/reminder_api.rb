=begin
#Vehicle Maintance Manager

#This is a sample vehicle maintance manager server.

OpenAPI spec version: 0.0.1
Contact: apiteam@vmmapi
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.2.3

=end

require "uri"

module SwaggerClient
  class ReminderApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # Add a reminder to the vehicle
    # 
    # @param vehicle_id ID of vehicle that needs to be updated
    # @param message Reminder message
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def add_reminder_to_vehicle_id(vehicle_id, message, opts = {})
      add_reminder_to_vehicle_id_with_http_info(vehicle_id, message, opts)
      return nil
    end

    # Add a reminder to the vehicle
    # 
    # @param vehicle_id ID of vehicle that needs to be updated
    # @param message Reminder message
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def add_reminder_to_vehicle_id_with_http_info(vehicle_id, message, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: ReminderApi.add_reminder_to_vehicle_id ..."
      end
      # verify the required parameter 'vehicle_id' is set
      if @api_client.config.client_side_validation && vehicle_id.nil?
        fail ArgumentError, "Missing the required parameter 'vehicle_id' when calling ReminderApi.add_reminder_to_vehicle_id"
      end
      # verify the required parameter 'message' is set
      if @api_client.config.client_side_validation && message.nil?
        fail ArgumentError, "Missing the required parameter 'message' when calling ReminderApi.add_reminder_to_vehicle_id"
      end
      # resource path
      local_var_path = "/reminder/vehicle/{vehicleId}".sub('{' + 'vehicleId' + '}', vehicle_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/xml', 'application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/x-www-form-urlencoded'])

      # form parameters
      form_params = {}
      form_params["message"] = message

      # http body (model)
      post_body = nil
      auth_names = ['vehiclegarage_auth']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ReminderApi#add_reminder_to_vehicle_id\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Deletes a reminder
    # 
    # @param reminder_id reminder id to delete
    # @param [Hash] opts the optional parameters
    # @option opts [String] :api_key 
    # @return [nil]
    def delete_reminder(reminder_id, opts = {})
      delete_reminder_with_http_info(reminder_id, opts)
      return nil
    end

    # Deletes a reminder
    # 
    # @param reminder_id reminder id to delete
    # @param [Hash] opts the optional parameters
    # @option opts [String] :api_key 
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def delete_reminder_with_http_info(reminder_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: ReminderApi.delete_reminder ..."
      end
      # verify the required parameter 'reminder_id' is set
      if @api_client.config.client_side_validation && reminder_id.nil?
        fail ArgumentError, "Missing the required parameter 'reminder_id' when calling ReminderApi.delete_reminder"
      end
      # resource path
      local_var_path = "/reminder/{reminderId}".sub('{' + 'reminderId' + '}', reminder_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/xml', 'application/json'])
      header_params[:'api_key'] = opts[:'api_key'] if !opts[:'api_key'].nil?

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['vehiclegarage_auth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ReminderApi#delete_reminder\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Find reminder by ID
    # Returns a single reminder
    # @param reminder_id ID of reminder to return
    # @param [Hash] opts the optional parameters
    # @return [Reminder]
    def get_reminder_by_id(reminder_id, opts = {})
      data, _status_code, _headers = get_reminder_by_id_with_http_info(reminder_id, opts)
      return data
    end

    # Find reminder by ID
    # Returns a single reminder
    # @param reminder_id ID of reminder to return
    # @param [Hash] opts the optional parameters
    # @return [Array<(Reminder, Fixnum, Hash)>] Reminder data, response status code and response headers
    def get_reminder_by_id_with_http_info(reminder_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: ReminderApi.get_reminder_by_id ..."
      end
      # verify the required parameter 'reminder_id' is set
      if @api_client.config.client_side_validation && reminder_id.nil?
        fail ArgumentError, "Missing the required parameter 'reminder_id' when calling ReminderApi.get_reminder_by_id"
      end
      # resource path
      local_var_path = "/reminder/{reminderId}".sub('{' + 'reminderId' + '}', reminder_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/xml', 'application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['api_key']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Reminder')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ReminderApi#get_reminder_by_id\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
