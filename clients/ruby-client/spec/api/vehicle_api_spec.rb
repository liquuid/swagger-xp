=begin
#Vehicle Maintance Manager

#This is a sample vehicle maintance manager server.

OpenAPI spec version: 0.0.1
Contact: apiteam@vmmapi
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.2.3

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::VehicleApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'VehicleApi' do
  before do
    # run before each test
    @instance = SwaggerClient::VehicleApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of VehicleApi' do
    it 'should create an instance of VehicleApi' do
      expect(@instance).to be_instance_of(SwaggerClient::VehicleApi)
    end
  end

  # unit tests for add_vehicle
  # Add a new vehicle
  # 
  # @param body Vehicle object that needs to be added to the garage
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'add_vehicle test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_vehicle
  # Deletes a vehicle
  # 
  # @param vehicle_id Vehicle id to delete
  # @param [Hash] opts the optional parameters
  # @option opts [String] :api_key 
  # @return [nil]
  describe 'delete_vehicle test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_vehicle_by_id
  # Find vehicle by ID
  # Returns a single vehicle
  # @param vehicle_id ID of vehicle to return
  # @param [Hash] opts the optional parameters
  # @return [Vehicle]
  describe 'get_vehicle_by_id test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_vehicle
  # Update an existing vehicle
  # 
  # @param body Vehicle object that needs to be added to the garage
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'update_vehicle test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_vehicle_with_form
  # Updates a vehicle in the garage with form data
  # 
  # @param vehicle_id ID of vehicle that needs to be updated
  # @param [Hash] opts the optional parameters
  # @option opts [String] :name Updated name of the vehicle
  # @option opts [String] :vehicletype Updated type of the vehicle
  # @return [nil]
  describe 'update_vehicle_with_form test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for upload_file
  # uploads an image
  # 
  # @param vehicle_id ID of vehicle to update
  # @param [Hash] opts the optional parameters
  # @option opts [String] :additional_metadata Additional data to pass to server
  # @option opts [File] :file file to upload
  # @return [ApiResponse]
  describe 'upload_file test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
